{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientsOutput","map","ig","className","classes","ingredientQuantity","key","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","Axios"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,mBAAqB,oC,0GCuBrDC,EArBD,SAAEC,GACZ,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KAAM,CACdC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAGlC,IAAMI,EAAoBL,EAAYM,KAAI,SAAAC,GACtC,OAAO,0BAAMC,UAAWC,IAAQC,mBACxBC,IAAKJ,EAAGJ,MADT,IACiBI,EAAGJ,KADpB,KAC4BI,EAAGH,OAD/B,SAIX,OACQ,yBAAKI,UAAWC,IAAQX,OACpB,4CAAmBO,EAAnB,KACA,sCAAW,wCAAcN,EAAMa,MAAMC,QAAQ,GAAlC,Q,wCCXrBC,E,kLAGCC,KAAKhB,MAAMiB,cAAcD,KAAKhB,MAAMkB,MAAOF,KAAKhB,MAAMmB,U,+BAIrD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAOb,OANIL,KAAKhB,MAAMsB,UACXF,EAASJ,KAAKhB,MAAMoB,OAAOb,KAAK,SAAAgB,GAAK,OACzB,kBAAC,EAAD,CAAOX,IAAKW,EAAMC,GACVvB,YAAasB,EAAMtB,YACnBY,OAAQU,EAAMV,YAGlC,6BACMO,O,GAhBGK,aAqCNC,uBAfS,SAAAC,GACpB,MAAO,CACHP,OAAQO,EAAMJ,MAAMH,OACpBE,QAASK,EAAMJ,MAAMD,QACrBJ,MAAOS,EAAMC,KAAKV,MAClBC,OAAQQ,EAAMC,KAAKT,WAIA,SAAAU,GACvB,MAAO,CACHZ,cAAe,SAACC,EAAOC,GAAR,OAAmBU,EAASC,IAAoBZ,EAAOC,QAI/DO,CAAgDK,YAAiBhB,EAAQiB","file":"static/js/5.b09e4a9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1w5Wf\",\"ingredientQuantity\":\"Order_ingredientQuantity__3Li-G\"};","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst Order = ( props ) => {\r\n    const ingredients = [];\r\n    for( let ingredientName in props.ingredients ) {\r\n        ingredients.push( {\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        })\r\n    }\r\n    const ingredientsOutput = ingredients.map(ig => {\r\n        return <span className={classes.ingredientQuantity}\r\n                key={ig.name}> {ig.name} ({ig.amount}) </span>\r\n    });\r\n\r\n    return (\r\n            <div className={classes.Order}>\r\n                <p> Ingredients: { ingredientsOutput } </p>\r\n                <p> Price: <strong> USD {props.price.toFixed(2)} </strong></p>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Order;","import React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport Axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n       this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if(!this.props.loading) {\r\n            orders = this.props.orders.map( order => \r\n                        <Order key={order.id}\r\n                                ingredients={order.ingredients}\r\n                                price={+order.price} /> )\r\n        }\r\n        return (\r\n            <div>\r\n                { orders }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler(Orders, Axios));"],"sourceRoot":""}