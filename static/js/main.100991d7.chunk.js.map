{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.module.css","components/Navigation/Sidedrawer/Sidedrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Order/Order.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/images/logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/Sidedrawer/DrawToggle/DrawToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","containers/Checkout/ContactData/ContactData.module.css","hoc/Auxilliary/Auxilliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Sidedrawer/DrawToggle/DrawToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Sidedrawer/Sidedrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","axios-orders.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","activeClassName","active","exact","navigationItems","NavigationItems","drawToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","DrawToggle","drawToggleClicked","backdrop","show","Backdrop","sidedrawer","attachedClasses","Sidedrawer","Close","open","Open","closed","join","Layout","state","showSidedrawer","sidedrawerToggleHandler","setState","prevState","sidedrawerClosedHandler","this","Content","Component","BurgerIngredients","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Paneer","Cheese","Potato","Salad","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","cancelOrder","continueOrder","spinner","Loader","instance","axios","create","baseURL","withErrorHandler","WrappedComponent","error","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","errorConfirmedHandler","message","BurgerBuilder","purchasing","updatePurchaseState","sum","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","onInitIngredients","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","totalPrice","connect","burgerBuilder","dispatch","ingName","ingredientName","get","then","data","catch","checkoutSummary","CheckoutSummary","Order","checkoutCancelled","checkoutContinued","Input","inputElement","inputClasses","InputElement","validationError","invalid","shouldValidate","touched","ValidationError","elementConfig","placeholder","Invalid","elementType","value","onChange","changed","options","option","displayValue","ContactData","orderForm","name","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","checkValidity","rules","isValid","trim","isEmail","test","isNumeric","inputChangeHandler","inputIndentifier","updatedOrderForm","updatedFormElement","target","formIsValid","inputIdentifier","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","Axios","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","path","match","component","amount","ingredientsOutput","ig","ingredientQuantity","Orders","onFetchOrders","orders","fetchOrders","fetchOrdersFail","App","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICE","salad","cheese","paneer","potato","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updateIngredient","updateState","reducer","purchaseSuccess","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.100991d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__24sYy\",\"BreadTop\":\"BurgerIngredients_BreadTop__bYZwE\",\"Seeds1\":\"BurgerIngredients_Seeds1__2S01y\",\"Seeds2\":\"BurgerIngredients_Seeds2__2nO0P\",\"Paneer\":\"BurgerIngredients_Paneer__10D-4\",\"Cheese\":\"BurgerIngredients_Cheese__2nDlB\",\"Salad\":\"BurgerIngredients_Salad__AI_fe\",\"Potato\":\"BurgerIngredients_Potato__v_s83\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidedrawer\":\"Sidedrawer_Sidedrawer__ZhUxG\",\"Open\":\"Sidedrawer_Open__3xrFm\",\"Close\":\"Sidedrawer_Close__1i6iM\",\"Logo\":\"Sidedrawer_Logo__1Lh3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1JZgq\",\"Label\":\"Input_Label__jOVUz\",\"InputElement\":\"Input_InputElement__vA8e3\",\"Invalid\":\"Input_Invalid__21m8O\",\"ValidationError\":\"Input_ValidationError__hmnB6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3X1ml\",\"Label\":\"BuildControl_Label__3KfwJ\",\"Less\":\"BuildControl_Less__17lQW\",\"More\":\"BuildControl_More__1ksBK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1Twuw\",\"Logo\":\"Toolbar_Logo__10PVQ\",\"DesktopOnly\":\"Toolbar_DesktopOnly__304bT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1Go_C\",\"active\":\"NavigationItem_active__3JB77\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3kTw8\",\"OrderButton\":\"BuildControls_OrderButton__2FTXa\",\"enable\":\"BuildControls_enable__1sgK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2mXtd\",\"Success\":\"Button_Success__3Wxlt\",\"Danger\":\"Button_Danger__3lFYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"CheckoutSummary_Order__34UGS\",\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1mwSE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1w5Wf\",\"ingredientQuantity\":\"Order_ingredientQuantity__3Li-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__NEfo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__37a4W\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2W4ES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawToggle_DrawerToggle__1nnpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2YGE8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__CWLbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1S6_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2DcDR\",\"load4\":\"Spinner_load4__1BzlS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3CXc1\"};","const aux = (props) => props.children;\r\nexport default aux;","import React from 'react';\r\nimport classes from './Logo.module.css';\r\nimport burgerLogo from '../../assets/images/logo.png';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={ {height: props.height} }>\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n)\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink to={props.link} activeClassName={classes.active} exact={props.exact}> {props.children} </NavLink>\r\n    </li>\r\n)\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.module.css';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact> Burger Builder </NavigationItem>\r\n        <NavigationItem link=\"/orders\"> Orders </NavigationItem>\r\n    </ul>\r\n)\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawToggle.module.css';\r\n\r\nconst drawToggle = (props) => (\r\n    <div className={classes.DrawerToggle}\r\n         onClick={props.clicked} >\r\n             <div></div>\r\n             <div></div>\r\n             <div></div>\r\n         </div>\r\n);\r\n\r\nexport default drawToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawToggle from '../Sidedrawer/DrawToggle/DrawToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawToggle clicked={props.drawToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav> <NavigationItems /> </nav>\r\n    </header>\r\n)\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => props.show ?\r\n        <div className={classes.Backdrop} onClick={props.clicked} ></div>\r\n        : null\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport classes from './Sidedrawer.module.css';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Logo from '../../Logo/Logo';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxilliary/Auxilliary';\r\n\r\nconst sidedrawer = (props) => {\r\n    let attachedClasses = [ classes.Sidedrawer, classes.Close ];\r\n    if( props.open ) {\r\n        attachedClasses = [ classes.Sidedrawer, classes.Open ]\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo} >\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default sidedrawer;","import React, { Component } from 'react';\r\nimport Aux from '../Auxilliary/Auxilliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport Sidedrawer from '../../components/Navigation/Sidedrawer/Sidedrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSidedrawer: false\r\n    }\r\n\r\n    sidedrawerToggleHandler = () => {\r\n        this.setState( (prevState) => { \r\n            return { showSidedrawer: !prevState.showSidedrawer }\r\n        })\r\n    }\r\n\r\n    sidedrawerClosedHandler = () => {\r\n        this.setState({ showSidedrawer: false })\r\n    }\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawToggleClicked={this.sidedrawerToggleHandler} />\r\n                <Sidedrawer closed={this.sidedrawerClosedHandler} open={this.state.showSidedrawer} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredients.module.css';\r\n\r\nclass BurgerIngredients extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n        switch(this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('paneer'):\r\n                ingredient = <div className={classes.Paneer}></div>\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n            case ('potato'):\r\n                ingredient = <div className={classes.Potato}></div>\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredients.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredients;","import React from 'react';\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\r\nimport classes from './Burger.module.css';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients =\r\n            Object.keys(props.ingredients)\r\n                .map(igKey => {\r\n                    return [...Array( props.ingredients[igKey] )].map( (_, i) => {\r\n                        return <BurgerIngredients key={igKey + i} type={igKey} />\r\n                    })\r\n                }).reduce( (arr, el) => {\r\n                    return arr.concat(el)\r\n                }, []);\r\n\r\n    if(transformedIngredients.length === 0) {\r\n        transformedIngredients = <p> Please start adding ingredients! </p>\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredients type=\"bread-top\" />\r\n            { transformedIngredients }\r\n            <BurgerIngredients type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label} > { props.label } </div>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>\r\n            Less </button>\r\n        <button className={classes.More} onClick={props.added} > More </button>\r\n    </div>\r\n)\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Paneer', type: 'paneer' },\r\n    { label: 'Potato', type: 'potato' },\r\n    { label: 'Cheese', type: 'cheese' }\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p> Current Price: <strong> USD { props.price.toFixed(2) }</strong> </p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl key={ctrl.label} label={ctrl.label}\r\n                    added={ () => props.ingredientAdded(ctrl.type) }\r\n                    removed={ () => props.ingredientRemoved(ctrl.type) }\r\n                    disabled={ props.disabled[ctrl.type] } />\r\n        ))}\r\n        <button className={classes.OrderButton}\r\n                disabled={!props.purchasable}\r\n                onClick={props.ordered}>\r\n            ORDER NOW </button>\r\n    </div>\r\n)\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxilliary/Auxilliary';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate( nextProps, nextState ) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}> {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button className={ [classes.Button, classes[props.btnType]].join(' ') }\r\n            onClick={props.clicked}\r\n            disabled={props.disabled} >\r\n        {props.children}\r\n    </button>\r\n)\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Auxilliary/Auxilliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n\r\n    render() {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n            .map(igKey => <li key={igKey}>\r\n                <span style={{textTransform: 'capitalize'}}>\r\n                    {igKey}</span> : {this.props.ingredients[igKey]}\r\n                </li>\r\n            );\r\n\r\n        return (\r\n            <Aux>\r\n                <h3>Your Orders</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul> { ingredientSummary } </ul>\r\n                <p> Continue to Checkout </p>\r\n                <p><strong>Total Price : {this.props.price.toFixed(2)} </strong></p>\r\n                <Button btnType=\"Danger\" clicked={this.props.cancelOrder}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.continueOrder}>CONTINUE</Button>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = (props) => <div className={classes.Loader}>Loading...</div>;\r\n\r\nexport default spinner;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://hamburger-react-app-9e9ba.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxilliary/Auxilliary';\r\n\r\nconst withErrorHandler = ( WrappedComponent, axios ) => {\r\n    return class extends Component {\r\n        state = { error: null }\r\n\r\n        componentWillMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null });\r\n                return req;\r\n            })\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error })\r\n            })\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler() {\r\n            this.setState({ error: null })\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal show={this.state.error} \r\n                            modalClosed={this.errorConfirmedHandler}>\r\n                            {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent { ...this.props } />\r\n                </Aux>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React, { Component } from \"react\";\r\n\r\nimport Aux from \"../../hoc/Auxilliary/Auxilliary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport axios from \"../../axios-orders\";\r\nimport { connect } from \"react-redux\";\r\nimport * as burgerBuilderActions from '../../store/actions/index';\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients()\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n                        .map(igKey => ingredients[igKey])\r\n                        .reduce( (sum, el) => { return sum + el }, 0);\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true})\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false})\r\n    }\r\n\r\n    purchaseContinueHandler =() => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = { ...this.props.ings };\r\n        for( let key in disabledInfo ) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner />;\r\n        if( this.props.ings ) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={ this.props.ings } />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo} price={this.props.totalPrice}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)} ordered={this.purchaseHandler} />\r\n                </Aux>\r\n            )\r\n            orderSummary = <OrderSummary ingredients={ this.props.ings }\r\n                                    price={this.props.totalPrice}\r\n                                    continueOrder={this.purchaseContinueHandler}\r\n                                    cancelOrder={this.purchaseCancelHandler} />\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    { orderSummary }\r\n                </Modal>\r\n                { burger }\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch( burgerBuilderActions.addIngredient(ingName) ),\r\n        onIngredientRemoved: (ingName) => dispatch( burgerBuilderActions.removeIngredient(ingName) ),\r\n        onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients()),\r\n        onInitPurchase: () => dispatch(burgerBuilderActions.purchaseInit())\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = ( name ) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = ( name ) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = ( ingredients ) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return { type: actionTypes.FETCH_INGREDIENTS_FAILED }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n            .then(response => dispatch(setIngredients(response.data)))\r\n            .catch(error => dispatch(fetchIngredientsFailed()))\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = ( id, orderData ) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = ( orderData ) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json', orderData)\r\n            .then( response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail( error ))\r\n            });\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = ( orders ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrdersStart = ( ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatch  => {\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json')\r\n        .then(res => {\r\n            const fetchOrders = [];\r\n            for( let key in res.data) {\r\n                fetchOrders.push( {\r\n                    ...res.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchOrders))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchOrdersFail(error))\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport classes from './CheckoutSummary.module.css';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst checkoutSummary = ( props ) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well !</h1>\r\n            <div className={classes.Order}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}> CANCEL </Button>\r\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}> CONTINUE </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n    let validationError = null;\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched) {\r\n        validationError = <p className={classes.ValidationError}>Please enter a valid { props.elementConfig.placeholder}</p>\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch( props.elementType ) {\r\n        case ( 'input' ):\r\n            inputElement = <input { ...props.elementConfig }\r\n                                className={inputClasses.join(' ')}\r\n                                value={props.value} \r\n                                onChange={props.changed} />\r\n            break;\r\n        case ( 'textarea' ):\r\n            inputElement = <textarea { ...props.elementConfig }\r\n                                className={inputClasses.join(' ')}\r\n                                value={props.value} \r\n                                onChange={props.changed} />\r\n            break;\r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select className={inputClasses.join(' ')}\r\n                        value={props.value}\r\n                        onChange={props.changed} >\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}> {option.displayValue} </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input { ...props.elementConfig }\r\n                                className={inputClasses.join(' ')}\r\n                                value={props.value}\r\n                                onChange={props.changed} />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input} >\r\n            <label className={classes.Label} > {props.label} </label>\r\n            { inputElement }\r\n            { validationError }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport Axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nclass ContactData extends Component {\r\n\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Full Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fastest' },\r\n                        { value: 'cheapest', displayValue: 'Cheapest' }\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            },\r\n        },\r\n        formValid: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for ( let formElementIdentifier in this.state.orderForm ) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.totalPrice,\r\n            orderData: formData\r\n        }\r\n        this.props.onOrderBurger( order );\r\n    }\r\n\r\n    checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength) {\r\n            isValid = value.length >= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangeHandler = (event, inputIndentifier) => {\r\n        const updatedOrderForm = { ...this.state.orderForm };\r\n        const updatedFormElement = { ...updatedOrderForm[inputIndentifier] };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIndentifier] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for( let inputIdentifier in updatedOrderForm ) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid ;\r\n        }\r\n        this.setState({ orderForm: updatedOrderForm, formValid: formIsValid });\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler} >\r\n                {formElementsArray.map( ( formElement ) => (\r\n                    <Input elementType={formElement.config.elementType}\r\n                           elementConfig={formElement.config.elementConfig}\r\n                           value={formElement.config.value}\r\n                           invalid={!formElement.config.valid}\r\n                           shouldValidate={formElement.config.validation}\r\n                           touched={formElement.config.touched}\r\n                           key={formElement.id}\r\n                           changed={ (event) => this.inputChangeHandler(event, formElement.id) } />\r\n                ))}\r\n                <Button btnType=\"Success\" clicked={this.orderHandler}\r\n                        disabled={!this.state.formValid} > ORDER </Button>\r\n            </form>\r\n        );\r\n        if( this.props.loading ) {\r\n            form = <Spinner />\r\n        }\r\n        return (\r\n            <div className={classes.ContactData} >\r\n                <h4> Enter your Contact Data </h4>\r\n                { form }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: ( orderData ) => dispatch(actions.purchaseBurger(orderData))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( withErrorHandler(ContactData, Axios) );","import React, { Component } from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport ContactData from '../Checkout/ContactData/ContactData';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelledHandler = () => { this.props.history.goBack() }\r\n\r\n    checkoutContinuedHandler = () => { this.props.history.replace('/checkout/contact-data') }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\" />\r\n        if( this.props.ings ) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            summary = (\r\n                <div>\r\n                    { purchasedRedirect }\r\n                    <CheckoutSummary ingredients={this.props.ings}\r\n                                 checkoutCancelled={+this.checkoutCancelledHandler}\r\n                                 checkoutContinued={this.checkoutContinuedHandler} />\r\n                    <Route path={this.props.match.path + '/contact-data'}\r\n                            component={ContactData} />\r\n                </div>\r\n            )\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased : state.order.purchased\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps )( Checkout );","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst Order = ( props ) => {\r\n    const ingredients = [];\r\n    for( let ingredientName in props.ingredients ) {\r\n        ingredients.push( {\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        })\r\n    }\r\n    const ingredientsOutput = ingredients.map(ig => {\r\n        return <span className={classes.ingredientQuantity}\r\n                key={ig.name}> {ig.name} ({ig.amount}) </span>\r\n    });\r\n\r\n    return (\r\n            <div className={classes.Order}>\r\n                <p> Ingredients: { ingredientsOutput } </p>\r\n                <p> Price: <strong> USD {props.price.toFixed(2)} </strong></p>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Order;","import React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport Axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n       this.props.onFetchOrders();\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if(!this.props.loading) {\r\n            orders = this.props.orders.map( order => \r\n                        <Order key={order.id}\r\n                                ingredients={order.ingredients}\r\n                                price={+order.price} /> )\r\n        }\r\n        return (\r\n            <div>\r\n                { orders }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: () => dispatch(actions.fetchOrders())\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler(Orders, Axios));","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = ( oldObject, updatedProperties ) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false\r\n}\r\n\r\nconst INGREDIENT_PRICE = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    paneer: 1.3,\r\n    potato: 0.7\r\n};\r\n\r\nconst addIngredient = ( state, action ) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICE[action.ingredientName]\r\n    }\r\n    return updateObject(updatedState);\r\n}\r\n\r\nconst removeIngredient = ( state, action ) => {\r\n    const updateIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n    const updateIngredients = updateObject(state.ingredients, updateIngredient);\r\n    const updateState = {\r\n        ingredients: updateIngredients,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICE[action.ingredientName]\r\n    }\r\n    return updateObject(updateState);\r\n}\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch( action.type ) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient( state, action );\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return updateObject( state, {\r\n                ingredients: action.ingredients,\r\n                totalPrice: 4,\r\n                error: false\r\n            } )\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return updateObject( state, { error: true } )\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst purchaseSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n    return updateObject(state, {\r\n        loading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat(newOrder)\r\n    })\r\n}\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch( action.type ) {\r\n        case actionTypes.PURCHASE_INIT: return updateObject( state, { purchased: false } )\r\n        case actionTypes.PURCHASE_BURGER_START: return updateObject( state, { loading: true })\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseSuccess( state, action )\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return updateObject(state, { loading: false })\r\n        case actionTypes.FETCH_ORDERS_START: return updateObject( state, { loading: true })\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return updateObject( state, { loading: false, orders: action.orders } )\r\n        case actionTypes.FETCH_ORDERS_FAIL: return updateObject( state, { loading: false } )\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer\n})\n\nconst store = createStore( rootReducer, composeEnhancers( applyMiddleware(thunk)) );\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename=\"/Hamburger-react-app/\" >\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\nReactDOM.render(\n  app,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}